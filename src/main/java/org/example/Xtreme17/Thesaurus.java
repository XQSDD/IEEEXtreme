package org.example.Xtreme17;

/**
 * @author pc
 * @description 词库
 * 输入内容将包含一个 XML 词库，然后是文本。
 * 词库将是一个 XML 文档，以单独一行的根 <Thesaurus> 元素开头。<Thesaurus> 元素将由 <TermInfo> 元素组成，如下所示：
 *
 *<TermInfo> 标记是新术语节点的开始。<BT> 是更广泛的术语。例如，术语 "功率集成电路 "有两个更宽泛的术语 "功率电子器件 "和 "集成电路"。在这两个节点下，
 * 功率集成电路将显示为较窄的术语 <NT>。术语 <UF> 是术语 <T> 的同义词，需要与术语 <T> 一样处理。
 * 无论何时出现一个术语，无论是作为 Tor UF 元素，都需要使用广义术语将该术语跟进到没有广义术语的主题。
 * 由于一个术语可以有多个广义术语 BT，因此该术语有可能属于多个主题。您必须计算属于每个顶级主题的术语出现的次数。
 * 文本可以在术语后附加标点符号。您需要删除逗号、句号、问号和感叹号。(文本中的其他字符，包括新行字符，都不应删除）。
 * 最后，正文中的大小写并不重要。空间站、空间站、空间站等都与 <T>Space Station</T> 匹配。
 * 结尾 </Thesaurus> 标记后的剩余行将是文章正文。
 *
 * 对于每个顶级主题，输出 [topic] = [count]，其中 [topic] 是词库中出现的顶级主题，[count] 是该主题或更狭义的术语在文本中出现的次数。
 * 将计数最高的输出排序在前。如果两个顶级主题的计数相同，则按字母顺序排列。
 *
 * 文本中未出现的顶级主题在输出中应显示为 [topic] = 0。
 * @create 2023/10/29 0:39
 */
public class Thesaurus {

}
